plugins {
	id 'org.springframework.boot' version '3.3.1'
	id 'io.spring.dependency-management' version '1.1.5'
	id 'org.jetbrains.kotlin.jvm' version '1.9.24'
	id 'org.jetbrains.kotlin.plugin.spring' version '1.9.24'
	id 'org.jetbrains.kotlin.kapt' version '1.9.24'
	id 'org.jetbrains.kotlin.plugin.jpa' version '1.9.24'
}

group = 'org.wine'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}


repositories {
	mavenCentral()
	flatDir {
		dirs 'customlib'
	}
}

dependencies {
	//spring
	implementation group: 'javax.validation', name: 'validation-api', version: '2.0.1.Final'
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation "org.springframework.boot:spring-boot-starter-web"
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.17.1'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.17.1'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.17.1'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.jetbrains.kotlin:kotlin-test-junit5'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


	//security
	implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '3.2.3'
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	//msa
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-netflix-eureka-client', version: '4.1.3'
	implementation group: 'org.springframework.cloud', name: 'spring-cloud-starter-openfeign', version: '4.1.3'

	//db
	implementation group: 'org.postgresql', name: 'postgresql', version: '42.7.3'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

	//Kafka
	implementation "org.springframework.kafka:spring-kafka"
	implementation "io.projectreactor.kafka:reactor-kafka"

	//mapstruct
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	kapt 'org.mapstruct:mapstruct-processor:1.5.5.Final'

	//lib
	implementation name: 'commonlib', version: '0.7', ext: 'jar'

	//doc
	implementation 'org.springdoc:springdoc-openapi-ui:1.7.0'
	implementation 'org.springdoc:springdoc-openapi-kotlin:1.7.0'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'org.springdoc:springdoc-openapi-starter-common:2.2.0'


	//lgging
	implementation("io.github.oshai:kotlin-logging-jvm:6.0.9")

	//kotlin
	implementation 'com.fasterxml.jackson.module:jackson-module-kotlin'
	implementation 'org.jetbrains.kotlin:kotlin-reflect'

	//coroutines
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.8.0"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactive:1.8.0"
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-reactor:1.8.0"
	testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:1.5.2"

	implementation 'io.micrometer:micrometer-tracing-bridge-brave' // Micrometer와 Brave 사이의 연동을 위한 브리지 역할을 하는 라이브러리입니다.
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave'
}

kotlin {
	compilerOptions {
		freeCompilerArgs.addAll '-Xjsr305=strict'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
