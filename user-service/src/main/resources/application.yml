server:
  port: 6013
spring:
  application:
    name: user-service
#  datasource:
#    driver-class-name: org.postgresql.Driver
#    url: jdbc:postgresql://ls-0c680c2adbc7c152941c70c39a18994bd30480ef.cpd3bfmvavpa.ap-northeast-2.rds.amazonaws.com:5432/userservice
#    username: dbmasteruser
#    password: testwinemall
  r2dbc:
    url: jdbc:postgresql://ls-0c680c2adbc7c152941c70c39a18994bd30480ef.cpd3bfmvavpa.ap-northeast-2.rds.amazonaws.com:5432/userservice
    username: dbmasteruser
    password: testwinemall
    pool:
      initial-size: 100
      max-size: 500
      max-idle-time: 30m
      validation-query: SELECT 1
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        use_sql_comments: true
  kafka:
    bootstrap-servers: 127.0.0.1:9092
    producer:
      retries: 1
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    consumer:
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      enable-auto-commit: false
      group-id: order
      auto-offset-reset: latest
    listener:
      ack-mode: manual
      poll-timeout: 5000
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka #Eureka Server ??
  instance:
    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}

jwt:
  secret: 357638792F423F4428472B4B6250655368566D597133743677397A2443264629
  accesstoken:
    time: 864000000000000
  refresh: refresh

logging:
  level:
    feign:
      client=DEBUG: